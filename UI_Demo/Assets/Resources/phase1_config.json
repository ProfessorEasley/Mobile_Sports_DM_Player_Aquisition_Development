{
  "schema_version": "ccas.p1.v1",
  "phase_1_configuration": {
    "tracked_emotions": ["frustration", "satisfaction"],
    "session_persistence": "reset_at_session_start",
    "rare_boost_cap": 1.20,
    "soft_cap_percentage": 0.85,
    "escalation_factor": 1.2,
    "global_quiet_window_seconds": [6, 8]
  },
  
  "pack_types": {
    "bronze_pack": {
      "pack_id": "bronze_001",
      "name": "Bronze Pack",
      "cost": {
        "coins": 1000,
        "gems": 0
      },
      "guaranteed_cards": 3,
      "drop_rates": {
        "common": 0.80,
        "uncommon": 0.15,
        "rare": 0.05,
        "epic": 0.00,
        "legendary": 0.00
      },
      "pity_rules": {
        "enabled": true,
        "rare_guarantee_after": 10,
        "epic_guarantee_after": 50,
        "legendary_guarantee_after": 100
      },
      "phase_1_emotional_impact": {
        "common_streak_base": {
          "frustration": 5.0
        },
        "rare_plus_pull_base": {
          "satisfaction": 2.0,
          "frustration": -3.0
        }
      }
    },
    "silver_pack": {
      "pack_id": "silver_001",
      "name": "Silver Pack",
      "cost": {
        "coins": 1500,
        "gems": 50
      },
      "guaranteed_cards": 4,
      "drop_rates": {
        "common": 0.60,
        "uncommon": 0.25,
        "rare": 0.10,
        "epic": 0.05,
        "legendary": 0.00
      },
      "pity_rules": {
        "enabled": true,
        "rare_guarantee_after": 8,
        "epic_guarantee_after": 40,
        "legendary_guarantee_after": 80
      },
      "phase_1_emotional_impact": {
        "common_streak_base": {
          "frustration": 5.0
        },
        "rare_plus_pull_base": {
          "satisfaction": 2.0,
          "frustration": -3.0
        }
      }
    },
    "gold_pack": {
      "pack_id": "gold_001",
      "name": "Gold Pack",
      "cost": {
        "coins": 2000,
        "gems": 100
      },
      "guaranteed_cards": 5,
      "drop_rates": {
        "common": 0.45,
        "uncommon": 0.30,
        "rare": 0.15,
        "epic": 0.10,
        "legendary": 0.00
      },
      "pity_rules": {
        "enabled": true,
        "rare_guarantee_after": 6,
        "epic_guarantee_after": 30,
        "legendary_guarantee_after": 60
      },
      "phase_1_emotional_impact": {
        "common_streak_base": {
          "frustration": 5.0
        },
        "rare_plus_pull_base": {
          "satisfaction": 2.0,
          "frustration": -3.0
        }
      }
    },
    "elite_pack": {
      "pack_id": "elite_001",
      "name": "Elite Pack",
      "cost": {
        "coins": 0,
        "gems": 200
      },
      "guaranteed_cards": 6,
      "drop_rates": {
        "common": 0.30,
        "uncommon": 0.35,
        "rare": 0.20,
        "epic": 0.15,
        "legendary": 0.00
      },
      "pity_rules": {
        "enabled": true,
        "rare_guarantee_after": 4,
        "epic_guarantee_after": 20,
        "legendary_guarantee_after": 40
      },
      "phase_1_emotional_impact": {
        "common_streak_base": {
          "frustration": 5.0
        },
        "rare_plus_pull_base": {
          "satisfaction": 2.0,
          "frustration": -3.0
        }
      }
    },
    "epic_pack": {
      "pack_id": "epic_001",
      "name": "Epic Pack",
      "cost": {
        "coins": 0,
        "gems": 300
      },
      "guaranteed_cards": 7,
      "drop_rates": {
        "common": 0.15,
        "uncommon": 0.35,
        "rare": 0.30,
        "epic": 0.20,
        "legendary": 0.00
      },
      "pity_rules": {
        "enabled": true,
        "rare_guarantee_after": 2,
        "epic_guarantee_after": 10,
        "legendary_guarantee_after": 20
      },
      "special_modifiers": [
        "guaranteed_rare_minimum"
      ],
      "phase_1_emotional_impact": {
        "common_streak_base": {
          "frustration": 5.0
        },
        "rare_plus_pull_base": {
          "satisfaction": 2.0,
          "frustration": -3.0
        }
      }
    }
  },
  
  "rarity_tiers": {
    "common": {
      "tier_id": "common",
      "display_name": "Common",
      "base_xp": 10,
      "dust_value": 5,
      "phase_1_streak_trigger": true,
      "phase_1_base_impact": {
        "frustration": 0.5
      }
    },
    "uncommon": {
      "tier_id": "uncommon",
      "display_name": "Uncommon",
      "base_xp": 20,
      "dust_value": 10,
      "phase_1_streak_trigger": false,
      "phase_1_base_impact": {
        "satisfaction": 0.3
      }
    },
    "rare": {
      "tier_id": "rare",
      "display_name": "Rare",
      "base_xp": 50,
      "dust_value": 20,
      "phase_1_rare_plus": true,
      "phase_1_base_impact": {
        "satisfaction": 2.0,
        "frustration": -3.0
      }
    },
    "epic": {
      "tier_id": "epic",
      "display_name": "Epic",
      "base_xp": 100,
      "dust_value": 40,
      "phase_1_rare_plus": true,
      "phase_1_base_impact": {
        "satisfaction": 2.0,
        "frustration": -3.0
      }
    },
    "legendary": {
      "tier_id": "legendary",
      "display_name": "Legendary",
      "base_xp": 200,
      "dust_value": 100,
      "phase_1_rare_plus": true,
      "phase_1_base_impact": {
        "satisfaction": 2.0,
        "frustration": -3.0
      }
    }
  },
  
  "phase_1_hooks": {
    "outcome_streak": {
      "hook_id": "outcome_streak_v1",
      "description": "Triggers on streak of similar outcomes",
      "trigger_condition": "streak >= 2",
      "streak_tiers": {
        "short": [2, 3],
        "medium": [4, 5, 6],
        "long": [7, 999]
      },
      "base_deltas": {
        "common_streak": {
          "frustration": 5.0
        },
        "rare_plus_pull": {
          "satisfaction": 2.0,
          "frustration": -3.0
        }
      },
      "scaling_formula": "delta = base * EF^(streak_len - 1)",
      "rare_boost_applied": true,
      "rare_boost_applies_to": "satisfaction_only",
      "note": "Rare boost (+20%) applies ONLY to satisfaction increase, NOT to frustration reduction"
    },
    
    "progress_drought": {
      "hook_id": "progress_drought_v1",
      "description": "Triggers on slow/no progress",
      "trigger_condition": "time_since_progress >= 60 OR session_idle >= 600",
      "cadence_seconds": 10,
      "base_delta": {
        "frustration": 3.0
      },
      "scaling_formula": "delta = base * EF^(drought_counter - 1)"
    }
  },
  
  "phase_1_hooks_future": {
    "social_comparison": {
      "hook_id": "social_comparison_v1",
      "description": "RESERVED FOR PHASE 2+ when leaderboard exists",
      "status": "disabled_until_leaderboard",
      "note": "Will track envy when social/competitive systems are implemented",
      "trigger_condition": "leaderboard_exposed OR shared_pull_viewed",
      "refresh_seconds": 15,
      "base_deltas": {
        "behind_peers": {
          "envy": 1.5
        },
        "ahead_peers": {
          "satisfaction": 1.0
        }
      },
      "scaling_formula": "delta = base * EF^(social_streak - 1)"
    }
  },
  
  "phase_1_decay_rules": {
    "frustration": {
      "decay_value": -1.5,
      "trigger_condition": "xp_multiplier_active OR dupe_bonus_received",
      "trigger_events": ["xp_multiplier_activated", "dupe_conversion_bonus"]
    },
    "satisfaction": {
      "decay_value": -2.0,
      "trigger_condition": "no_rare_plus_for_2_sessions",
      "note": "Checks if player has gone 2 consecutive sessions without pulling rare/epic/legendary"
    }
  },
  
  "phase_1_decay_rules_future": {
    "envy": {
      "decay_value": -1.0,
      "trigger_condition": "no_leaderboard_exposure_for_2_sessions",
      "status": "reserved_for_phase_2"
    }
  },
  
  "phase_1_state_contract": {
    "schema_version": "ccas.p1.v1",
    "player_id": "uuid-string",
    "session_id": "uuid-string",
    "timestamp_last_update": "ISO-8601-string",
    "emotions": {
      "frustration": {
        "value": 0.0,
        "min": 0.0,
        "max": 10.0
      },
      "satisfaction": {
        "value": 0.0,
        "min": 0.0,
        "max": 10.0
      }
    },
    "streaks": {
      "success": 0,
      "fail": 0,
      "drought": 0
    },
    "config": {
      "escalation_factor": 1.2,
      "soft_cap_percentage": 0.85,
      "rare_multiplier_cap": 1.20,
      "quiet_window_seconds": [6, 8]
    }
  },
  
  "phase_1_update_order": [
    "1. Apply any eligible decay (frustration, satisfaction only)",
    "2. Evaluate hooks (outcome_streak, progress_drought) and compute deltas",
    "3. Apply Rare+ boost (+20% max) to satisfaction delta ONLY",
    "4. Sum deltas by emotion",
    "5. Apply soft cap (~85% of target per update)",
    "6. Clamp to emotion bounds [0, 10]",
    "7. Enforce cooldowns and quiet window (6-8s global)"
  ],
  
  "acceptance_criteria": {
    "common_streak_test": {
      "scenario": "3 commons in a row",
      "expected": "frustration += 5 × 1.2^(3-1) = 5 × 1.44 = 7.2",
      "per_update_push": "≤ ~85% of target (soft cap applies)"
    },
    "epic_legendary_test": {
      "scenario": "Epic or Legendary pull",
      "expected_satisfaction": "satisfaction += 2 × 1.2^(streak-1); Rare+ extra ≤ +20% before clamp",
      "expected_frustration": "frustration -= 3 × 1.2^(streak-1); NO rare boost on reduction"
    },
    "drought_test": {
      "scenario": "Drought active (no progress ≥60s)",
      "expected": "Every 10s: frustration += 3 × 1.2^(drought_counter-1)",
      "reset": "Resets when progress resumes (rare+ pull, level up, etc.)"
    },
    "decay_test": {
      "frustration": "Decay -1.5 on XP multiplier or dupe conversion bonus",
      "satisfaction": "Decay -2.0 if two consecutive sessions have no Rare+"
    },
    "session_reset_test": {
      "expected": "Session start zeros all emotions and streaks"
    },
    "quiet_window_test": {
      "expected": "6-8s global quiet window prevents multiple hook firings"
    }
  },
  
  "implementation_notes": {
    "phase_1_scope": "2 emotions (frustration, satisfaction), 2 hooks (outcome_streak, progress_drought)",
    "offline_single_player": "No social features, no leaderboard, no sharing in Phase 1",
    "envy_integration_plan": "Reserved for Phase 2+ when leaderboard/rivalry systems exist",
    "acquisition_loop_focus": "Document how frustration and satisfaction feed into player decisions"
  }
}
